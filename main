if not game:IsLoaded() then game.Loaded:Wait() end

local print = printuiconsole or print
local error = erroruiconsole or error
local warn = warnuiconsole or warn

if getgenv()._CF then error("Creamfood is already loaded!") end

local DEBUG = true

if not DEBUG then
	getgenv().CF = true
end

local Services = {
	Workspace = game:GetService("Workspace"),
	Lighting = game:GetService("Lighting"),
	RunService = game:GetService("RunService"),
	ReplicatedStorage = game:GetService("ReplicatedStorage"),
	Players = game:GetService("Players"),
	TeleportService = game:GetService("TeleportService"),
	ContextActionService = game:GetService("ContextActionService"),
	HttpService = game:GetService("HttpService"),
	TweenService = game:GetService("TweenService"),
}

local players = Services.Players
local player = players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local playergui = player.PlayerGui
local playerbackpack = player.Backpack

local Camera = workspace.CurrentCamera

local sethiddenproperty = sethiddenproperty or set_hidden_property or set_hidden_prop
local gethiddenproperty = gethiddenproperty or get_hidden_property or get_hidden_prop
local setsimulationradius = setsimulationradius or set_simulation_radius
local queue_on_teleport = queue_on_teleport or (fluxus and fluxus.queue_on_teleport) or (syn and syn.queue_on_teleport)
local request = request or http_request or (fluxus and fluxus.request) or (http and http.request) or (syn and syn.request)
local PlaceId, JobId = game.PlaceId, game.JobId
local runcode = executescript or function(text) loadstring(text)() end

if not writefile then error("Your exploit doesn't have writefile, some commands may not work") end
if not loadfile then error ("Your exploit doesn't have loadfile, some commands may not work") end
if not request then error("Your exploit doesn't have request, some commands may not work") end
if not queue_on_teleport then error("Your exploit doesn't have queue_on_teleport, some commands may not work") end
if not setsimulationradius then error("Your exploit doesn't have setsimulationradius, some commands may not work") end

local Inst = Instance.new

local function SendNotification(text)
	local ScreenGui = Inst("ScreenGui")
	ScreenGui.Parent = gethui() or playergui
	local number = math.random(1,#playergui:GetChildren())
end

local function GetCommandPlayer (Text)
	local SpecialUseCases = {"all","me", "random", "others"}
	local selected_player = {}
	local Players = players:GetPlayers()
	
	local cases = {
		["all"] = function() for k,v in pairs (Players) do selected_player[#selected_player+1] = v end end,
		["others"] = function() for k,v in pairs (Players) do if v.Name ~= player.Name then selected_player[#selected_player+1] = v end end end,
		["random"] = function() local number = math.random(1,#Players) selected_player[#selected_player+1] = Players[number] end,
		["me"] = function() selected_player[#selected_player+1] = player end,
	}
	
	local Split_Text = string.split(Text, " ")
	
	local hi = Split_Text[1]:lower()
	
	table.remove(Split_Text, 1) -- command, useless in this function
	local idk = string.gsub(hi, "%$", "")
	
	for _, yeet in next, SpecialUseCases do
		for k,func in pairs (cases) do
			if yeet == idk and k == idk then func() end
		end
	end
	
	for _, plr in pairs (Players) do
		local e = hi
		if string.lower (plr.Name):match("^"..string.lower(e)) or string.lower (plr.DisplayName):match("^"..string.lower(e)) or string.lower(plr.Character.Humanoid.DisplayName):match("^"..string.lower(e)) then
			selected_player[#selected_player+1] = plr
		end
	end
	
	if string.find(hi, ",") then
		local hi = hi:split(",")
		for k,v in pairs (hi) do
			selected_player[#selected_player+1] = GetCommandPlayer(v)[1]
		end
	end
	
	if DEBUG then
		print(selected_player)
	end
	
	return selected_player
end

local commands = {}
local connections = {}
local waypoints = {}

local function add(command_name, func, aliases, description, paramTypes)
	commands[#commands+1] = {
	name = command_name,
	func = func,
	aliases = aliases,
	desc = description,
	paramTypes = paramTypes,
	}
end

local function FindCommand(cmd_name)
	if commands[cmd_name] then return commands[cmd_name] end
	
	for _, c in pairs (commands) do
		if c.name == cmd_name then return c end
		
		for k, alias in pairs (c.aliases) do
			if alias == cmd_name then
				return c
			end
		end
	end
end

local function playcmd (text)
	local text = text:split(" ")
	local cmd_name = text[1] -- garantido, sempre ser√° o primeiro
	table.remove(text,1)
	local cmd = FindCommand(cmd_name)
	local parameters = {}
	
	if not cmd then return end
	
	if #cmd.paramTypes == 1 then -- everything needs to be the same
		if cmd.paramTypes[1] == "string" then
			parameters[1] = tostring(table.concat(text, " ",1))
			
			elseif cmd.paramTypes[1] == "player" then
			parameters[1] = GetCommandPlayer(text[1])
			
			elseif cmd.paramTypes[1] == "number" then
			parameters[1] = tonumber(table.concat(text, " ", 1))
			
			elseif cmd.paramTypes[1] == "bool" then
			
		end
		
		--parameters.Text = table.concat(parameters, " ", 1)
		
		else
		for i, v in ipairs(cmd.paramTypes) do
			if v == "player" then
				parameters[i] = GetCommandPlayer(text[i])
				elseif v == "string" then
				parameters[i] = tostring(text[i])
				elseif v == "number" then
				parameters[i] = tonumber(text[i])
			end
		end
	end
	
	pcall(cmd.func, parameters)
end


local ScreenGui = Inst("ScreenGui")
local Frame = Inst("Frame")
local TextBox = Inst("TextBox")

ScreenGui.Parent = gethui() or playergui
ScreenGui.ResetOnSpawn = false
Frame.Parent = ScreenGui
TextBox.Parent = Frame

Frame.BackgroundColor3 = Color3.fromRGB(
math.random(0,255),
math.random(0,255),
math.random(0,255)
)

TextBox.BackgroundColor3 = Color3.fromRGB(20,20,20)
TextBox.TextColor3 = Color3.fromRGB(255,255,255)
TextBox.BorderSizePixel = 0

local function ud2offset(x,y)
	return UDim2.fromOffset(x,y)
end

local function ud2scale(x,y)
	return UDim2.fromScale(x,y)
end

local function Notify(text, duration)
	local duration = duration or 3
	
	local ScreenGui = Inst("ScreenGui")
	ScreenGui.Parent = gethui() or playergui
	
	local hi = playergui:GetChildren()
	
	local number = math.random(1,#hi)
	
	ScreenGui.Name = hi[number].Name
	
	local Frame = Inst("Frame")
	Frame.Parent = ScreenGui
	frame.BackgroundColor3 = Color3.fromRGB(40,40,40)
	frame.BorderSizePixel = 0
	frame.Position = ud2scale(0.748,0.824)
	frame.Size = ud2scale(0.237,0.128)
	frame.Transparency = 1
	
	local TextLabel = Inst("TextLabel")
	TextLabel.AutomaticSize = Enum.AutomaticSize.X
	TextLabel.BackgroundTransparency = 1
	TextLabel.Position = ud2scale(0,0.072)
	TextLabel.Size = ud2scale(1,0.845)
	TextLabel.RichText = true
	TextLabel.TextColor3 = Color3.fromRGB(255,255,255)
	TextLabel.TextScaled = true
	TextLabel.Text = text
	TextLabel.TextTransparency = 1
	
	local info = TweenInfo.new(1)
	local tween = Services.TweenService:Create(Frame, info, {Transparency = 0})
	tween:Play()
	local tween = Services.TweenService:Create(TextLabel, info, {TextTransparency = 0})
	tween:Play()
end

local screensize = ScreenGui.AbsoluteSize
Frame.AnchorPoint = Vector2.new(0.5,0.5)
Frame.Size = ud2scale(0.3,0.05)
Frame.Position = ud2scale(0.5,0.85)
TextBox.Size = ud2scale(1,0.95)
TextBox.Position = ud2offset(0,0)
Frame.BorderSizePixel = 0
Frame.Transparency = 1
TextBox.Transparency = 1

TextBox.FocusLost:Connect(function(enter)
	if enter then
		if DEBUG then
			playcmd(TextBox.Text)
			else
			pcall(playcmd, TextBox.Text)
		end
		TextBox.Text = ""
	end
	local info = TweenInfo.new(1)
	local tween = Services.TweenService:Create(Frame, info, {Transparency = 1})
	tween:Play()
	local tween = Services.TweenService:Create(TextBox, info, {Transparency = 1})
	tween:Play()
end)

Services.ContextActionService:BindAction("ad", function()
	TextBox:CaptureFocus()
	spawn(function()
		repeat TextBox.Text = "" until TextBox.Text == ""
	end)
	local info = TweenInfo.new(1)
	local tween = Services.TweenService:Create(Frame, info, {Transparency = 0})
	tween:Play()
	local tween2 = Services.TweenService:Create(TextBox, info, {Transparency = 0})
	tween2:Play()
end, false, Enum.KeyCode.Semicolon)

add ("print", function(yeet)
	print(yeet[1])
end, {"p"}, "maeks console add text :3", {"string"}, false)

add ("speed", function(yeet)
	if player and player.Character then
		character.Humanoid.WalkSpeed = yeet[1]
	end
end, {"ws","walkspeed"}, "go fast", {"number"},false)

add("jpower", function(yeet)
	if player and player.Character then
		character.Humanoid.JumpPower = yeet[1]
	end
end, {"jp","jumppower"}, "jump high", {"number"}, false)

add("maxfps", function(yeet)
	local setfpscap = setmaxfps or set_fps_cap or setfpscap
	setfpscap(yeet[1])
end, {"setmaxfps"}, "changes your max fps", {"number"}, false)

add("antiafk", function()	
	for k,v in pairs (connections) do
		if k == "antiafk" then v:Disable() v:Disconnect() end
	end
	
	local antiafk = player.Idled:Connect(function()
		for _, connection in pairs (getconnections(player.Idled)) do
			connection:Disable()
			connection:Disconnect()
		end
	end)
	
	connections["antiafk"] = antiafk
end, {"aa", "afk"}, "makes you not get kicked by being afk", {}, false)

add("unantiafk", function()
	for k,v in pairs (connections) do
		if k == "antiafk" then v:Disable() v:Disconnect() end
	end
end, {"unaa","unafk","noaa","noafk"}, "makes you get kicked by being afk", {}, false)

add("spin", function(yeet)
	local bav = Instance.new("BodyAngularVelocity")
	bav.Parent = player.Character.HumanoidRootPart
	bav.AngularVelocity = Vector3.new (0, yeet.Text, 0)
	bav.MaxTorque = Vector3.new (0, math.huge, 0)
	connections[#connections+1] = bav
end, {}, "makes you spin", {"number"}, false)

add("unspin", function(yeet)
	for k,v in pairs (connections) do
		if v.Name == "BodyAngularVelocity" then v:Destroy() end
	end
end, {}, "makes you stop spinning :(", {}, false)

add("teleport", function(yeet)
	local _players = yeet[1]
	for k,v in pairs (_players) do
		character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame
	end
end, {"tp"}, "tp to someone", {"player"}, false)

add("rejoin", function()
	player:Kick()
	task.wait(0.3)
	if #Services.Players:GetPlayers() <= 1 then
		Services.TeleportService:Teleport(PlaceId, player)
		else
		Services.TeleportService:TeleportToPlaceInstance(PlaceId, JobId, player)
	end
end, {"rj"}, "rejoin the game or to another server", {}, false)

add("loadfile", function(yeet)
	if loadfile then
		loadfile(yeet[1])
	end
end, {"lf"}, "you load a file?", {"string"}, false)

add("runcode", function(yeet)
	runcode(yeet[1])
end, {"rc"}, "you run code", {"string"}, false)

add("hitbox", function()
	for k, object in pairs (workspace:GetDescendants()) do
		if object:IsA("BasePart") or object:IsA("MeshPart") then
			local box = Instance.new("SelectionBox")
			box.Parent = object
			connections[#connections+1] = box
			box.LineThickness = 0.015
			box.Adornee = object
			if object.Transparency > 0 then
				box.Color3 = Color3.fromRGB(255,201,252)
				else
				box.Color3 = Color3.fromRGB(201,248,255)
			end
		end
	end
end, {}, "show every part hitbox", {}, false)

add("unhitbox", function()
	for index,v in ipairs (connections) do
		if v.Name == "SelectionBox" then v:Destroy() connections[index] = nil end
	end
end, {},"stops showing every part hitbox", {}, false)

add("noclip",function()
	for _, part in pairs (character:GetDescendants()) do
		if part:IsA("BasePart") and part.CanCollide == true then
			connections[#connections+1] = {
			name = "noclip",
			part = part,
			Stepped = Services.RunService.Stepped:Connect(function()
				part.CanCollide = false
			end)
			}
		end
	end
end, {"nc"}, "noclip into the backrooms, jk you dont collide", {}, false)

add("clip", function()
	for index, value in ipairs (connections) do
		if value.name and value.name == "noclip" then
			value.part.CanCollide = true
			value.Stepped:Disconnect()
			connections[index] = nil
		end
	end
end, {"unnc","nonc"}, "you collide", {}, false)

add("jump", function()
	character.Humanoid:ChangeState (Enum.HumannoidStateType.Jumping)
end, {}, "jump", {}, false)

add("sit", function()
	character.Humanoid.Sit = true
end, {}, "you sit", {}, false)

add("rainbow", function()
	local someveryfancymath = player.AccountAge + player.UserId + workspace.GlobalWind.Magnitude + workspace.Gravity
	local rand = Random.new(someveryfancymath)
	for k,v in ipairs (workspace:GetDescendants()) do
		if v:IsA("BasePart") or v:IsA("MeshPart") then
			v.Color = Color3.fromRGB(rand:NextNumber(0,255), rand:NextNumber(0,255), rand:NextNumber(0,255))
		end
	end
end, {"rainbow_world"}, "so colorful!!!", {}, false)

add("goto", function(yeet)
	for k,v in pairs (yeet[1]) do
		if v.Character then
			character.Humanoid:MoveTo(v.Character.HumanoidRootPart.Position)
		end
	end
end, {"to"}, "you walk to someone", {"player"}, false)

add("fireclickdetectors", function()
	if not fireclickdetector then return end
	for _, object in ipairs (workspace:GetDescendants()) do
		if object:IsA("ClickDetector") then
			fireclickdetector(object, 2)
		end
	end
end, {"firecds"}, "fire all the clickdetectors", {}, false)

add("view", function(yeet)
	for k,v in pairs (yeet[1]) do
		
		if connections["view"] then
			connections["view"]:Disconnect()
		end
		
		if v.Character then
			Camera.CameraSubject = v.Character.Humanoid
			
			connections["view"] = v.Character.Humanoid.Died:Connect(function()
				Camera.CameraSubject = character.Humanoid
				if connections["view"] then connections["view"] = nil end
			end)
		end
	end
end, {}, "view someone else", {"player"}, false)

add("cmds", function()
	for k,v in pairs (commands) do
		print(v.name)
	end
end,{}, "prints commands", {}, false)

add("infjump", function()
	Services.ContextActionService:BindAction("ijump",
	function(actionName, inputState, inputObject)
		if inputState == Enum.UserInputState.Begin then
			character.Humanoid:ChangeState (Enum.HumanoidStateType.Jumping)
		end
	end, false, Enum.KeyCode.Space)
end, {}, "go to space weeeeee", {}, false)

add("uninfjump", function()
	Services.ContextActionService:UnbindAction("ijump")
end, {}, "not going to space :(", {}, false)

add("nosit", function()
	if connections["nosit"] then connections["nosit"]:Disconnect() end
	connections["nosit"] = character.Humanoid.Seated:Connect(function(seated)
		if seated then
			character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
		end
	end)
end, {}, "cant seat anymore ;-;", {}, false)

add("unnosit", function()
	connections["nosit"]:Disconnect()
	connections["nosit"] = nil
end, {}, "can seat :D", {}, false)

add("bhop", function()
	if connections["bhop"] then connections["bhop"]:Disconnect() end
	connections["bhop"] = Services.RunService.Heartbeat:Connect(function()
		if character.Humanoid and character.Humanoid.FloorMaterial ~= Enum.Material.Air then
			character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
		end
	end)
end, {"bunnyhop"}, "jump jump jump jump", {}, false)

add("unbhop", function()
	if connections["bhop"] then
		connections["bhop"]:Disconnect()
		connections["bhop"] = nil
	end
end,{"stopbhop","stopbunnyhop"}, "no jump jump jump :c", {}, false)

add("hipheight", function(yeet)
	if character and character.Humanoid then
		character.Humanoid.HipHeight(yeet.Text)
	end
end,{"hh"}, "you walk on air but not on air", {"number"}, false)

add("streamer", function()
	if connections["streamer"] then
		connections["streamer"]["players"] = {}
		connections["streamer"]["connection"] = {}
		connections["streamer"]["connection2"] = {}
	end
	
	connections["streamer"] = {}
	connections["streamer"]["players"] = {}
	
	local function ChangeName(p)
		if p.Character and p.Character.Humanoid then
			local new_name = Services.HttpService:GenerateGUID(false)
			p.Character.Humanoid.DisplayName = new_name
			p.DisplayName = new_name
		end
	end
	
	for _, v in pairs (Services.Players:GetPlayers()) do
		if connections["streamer"]["players"][v.Name] then continue end
		connections["streamer"]["players"][v.Name] = ""
		
		ChangeName(v)
		
		connections["streamer"]["connection"] = v.Character.Humanoid.Died:Connect(function()
			connections["streamer"]["players"][v.Name] = nil
			v.CharacterAdded:Wait()
			if v.Character then
				ChangeName(v)
				connections["streamer"]["players"][v.Name] = ""
			end
		end)
	end
	
	connections["streamer"]["connection2"] = Services.Players.PlayerAdded:Connect(function(player)
		player.CharacterAdded:Wait()
		if player.Character then
			ChangeName(player)
			connections["streamer"]["players"][v.Name] = ""
			
			player.Character.Humanoid.Died:Connect(function()
				connections["streamer"]["players"][player.Name] = nil
				player.CharacterAdded:Wait()
				if player.Character then
					ChangeName(player)
					connections["streamer"]["players"][player.Name] = ""
				end
			end)
		end
	end)
	
end,{"streamermode"}, "makes players names not their names", {}, false)

add("unstreamer", function()
	if connections["streamer"] then
		connections["streamer"]["players"] = {}
		
		connections["streamer"]["connection"]:Disconnect()
		connections["streamer"]["connection2"]:Disconnect()
	end
end,{"nostreamermode","stopstreamermode"}, "makes player names their names", {}, false)

add("autorotate",function(yeet)
	character.Humanoid.AutoRotate = yeet.Text
end,{},"makes you stop rotating", {"bool"},false)

add("freeze",function(yeet)
	connections["freeze"] = {}
	for _,v in pairs (yeet[1]) do
		connections["freeze"][v.Name] = {}
		for j,k in pairs (v.Character:GetChildren()) do
			if k:IsA("BasePart") and k.Anchored == false then
				k.Anchored = true
				connections["freeze"][v.Name][#connections["freeze"][v.Name]+1] = k
			end
		end
	end
end, {}, "freezes the player(s)", {"player"}, false)

add("unfreeze", function(yeet)
	for _,v in pairs (yeet[1]) do
		if connections["freeze"][v.Name] then
			for j,k in pairs (connections["freeze"][v.Name]) do
				k.Anchored = false
				k = nil
			end
			
			connections["freeze"][v.Name] = nil
		end
	end
end, {"thaw"}, "makes the player(s) not frozen", {"player"}, false)

add("gravity", function(yeet)
	Services.Workspace.Gravity = yeet[1]
end, {"grav"}, "changes the gravity", {"number"}, false)

add("fov", function(yeet)
	Camera.FieldOfView = yeet[1]
end,{},"changes the field of view", {"number"}, false)

add("spam", function(yeet)
	connections["spam"] = true
	while connections["spam"] do
		wait(connections["spamspeed"] or 3)
		if connections["spam"] then
			Services.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(yeet[1], "All")
		end
	end
end, {}, "makes you spam text on chat", {"string"}, false)

add("unspam", function()
	connections["spam"] = false
end,{"stopspam"}, "makes you stop spamming", {}, false)

add("spamspeed",function(yeet)
	connections["spamspeed"] = yeet[1]
	
	if DEBUG then
		print(connections["spamspeed"])
	end
	
end, {}, "makes you spam faster or slower", {"number"}, false)

add("mkwaypoint", function(yeet)
	if not character then return end
	local waypoint_name = yeet[1]
	local currentCFrame = character.HumanoidRootPart.CFrame
	waypoints[waypoint_name] = currentCFrame
	currentCFrame = nil
end, {"mkwp", "makewaypoint"}, "waypoints yes", {"string"}, false)

add("gotowp", function(yeet)
	local waypoint_name = yeet[1]
	if waypoints[waypoint_name] then
		character.HumanoidRootPart.CFrame = waypoints[waypoint_name]
	end
end,{"towp","gotowaypoint","towaypoint"}, "walk to waypoint", {"string"}, false)

add("rmwp", function(yeet)
	local waypoint_name = yeet[1]
	if waypoints[waypoint_name] then
		waypoints[waypoint_name] = nil
	end
end,{"removewp","removewaypoint"}, "remove the waypoint", {"string"}, false)
